//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IFMTYP_team02.UserService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.IUserCRUD")]
    public interface IUserCRUD {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/insertUser", ReplyAction="http://tempuri.org/IUserCRUD/insertUserResponse")]
        int insertUser(string Username, string Password, string firstName, string surname, string Email, string cellNumber, System.DateTime DoB, System.DateTime RegDate, int modAccess, int adminAccess, int premAccess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/insertUser", ReplyAction="http://tempuri.org/IUserCRUD/insertUserResponse")]
        System.Threading.Tasks.Task<int> insertUserAsync(string Username, string Password, string firstName, string surname, string Email, string cellNumber, System.DateTime DoB, System.DateTime RegDate, int modAccess, int adminAccess, int premAccess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/deleteUser", ReplyAction="http://tempuri.org/IUserCRUD/deleteUserResponse")]
        int deleteUser(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/deleteUser", ReplyAction="http://tempuri.org/IUserCRUD/deleteUserResponse")]
        System.Threading.Tasks.Task<int> deleteUserAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/updateUserInfo", ReplyAction="http://tempuri.org/IUserCRUD/updateUserInfoResponse")]
        int updateUserInfo(int ID, string firstName, string surname, string cellNumber, System.DateTime DoB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/updateUserInfo", ReplyAction="http://tempuri.org/IUserCRUD/updateUserInfoResponse")]
        System.Threading.Tasks.Task<int> updateUserInfoAsync(int ID, string firstName, string surname, string cellNumber, System.DateTime DoB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/Authenticate", ReplyAction="http://tempuri.org/IUserCRUD/AuthenticateResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] Authenticate(string UserEmailOrUsername, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/Authenticate", ReplyAction="http://tempuri.org/IUserCRUD/AuthenticateResponse")]
        System.Threading.Tasks.Task<object[]> AuthenticateAsync(string UserEmailOrUsername, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/updateUserPassword", ReplyAction="http://tempuri.org/IUserCRUD/updateUserPasswordResponse")]
        int updateUserPassword(int ID, string emailAddress, string oldPass, string newPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/updateUserPassword", ReplyAction="http://tempuri.org/IUserCRUD/updateUserPasswordResponse")]
        System.Threading.Tasks.Task<int> updateUserPasswordAsync(int ID, string emailAddress, string oldPass, string newPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/getUserEmail", ReplyAction="http://tempuri.org/IUserCRUD/getUserEmailResponse")]
        string getUserEmail(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/getUserEmail", ReplyAction="http://tempuri.org/IUserCRUD/getUserEmailResponse")]
        System.Threading.Tasks.Task<string> getUserEmailAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/updateUserEmail", ReplyAction="http://tempuri.org/IUserCRUD/updateUserEmailResponse")]
        int updateUserEmail(int ID, string userPass, string oldEmail, string newEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/updateUserEmail", ReplyAction="http://tempuri.org/IUserCRUD/updateUserEmailResponse")]
        System.Threading.Tasks.Task<int> updateUserEmailAsync(int ID, string userPass, string oldEmail, string newEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/updateUserPremAccess", ReplyAction="http://tempuri.org/IUserCRUD/updateUserPremAccessResponse")]
        int updateUserPremAccess(int ID, string userPass, string userEmail, string cellNumber, System.DateTime DoB, int premAccess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/updateUserPremAccess", ReplyAction="http://tempuri.org/IUserCRUD/updateUserPremAccessResponse")]
        System.Threading.Tasks.Task<int> updateUserPremAccessAsync(int ID, string userPass, string userEmail, string cellNumber, System.DateTime DoB, int premAccess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/getFlaggedUsersManagement", ReplyAction="http://tempuri.org/IUserCRUD/getFlaggedUsersManagementResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[][] getFlaggedUsersManagement();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/getFlaggedUsersManagement", ReplyAction="http://tempuri.org/IUserCRUD/getFlaggedUsersManagementResponse")]
        System.Threading.Tasks.Task<object[][]> getFlaggedUsersManagementAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/getAllUsersManagement", ReplyAction="http://tempuri.org/IUserCRUD/getAllUsersManagementResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[][] getAllUsersManagement();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/getAllUsersManagement", ReplyAction="http://tempuri.org/IUserCRUD/getAllUsersManagementResponse")]
        System.Threading.Tasks.Task<object[][]> getAllUsersManagementAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/unflagUser", ReplyAction="http://tempuri.org/IUserCRUD/unflagUserResponse")]
        int unflagUser(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/unflagUser", ReplyAction="http://tempuri.org/IUserCRUD/unflagUserResponse")]
        System.Threading.Tasks.Task<int> unflagUserAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/flagUser", ReplyAction="http://tempuri.org/IUserCRUD/flagUserResponse")]
        int flagUser(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/flagUser", ReplyAction="http://tempuri.org/IUserCRUD/flagUserResponse")]
        System.Threading.Tasks.Task<int> flagUserAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/reportUser", ReplyAction="http://tempuri.org/IUserCRUD/reportUserResponse")]
        int reportUser(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/reportUser", ReplyAction="http://tempuri.org/IUserCRUD/reportUserResponse")]
        System.Threading.Tasks.Task<int> reportUserAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/unreportUser", ReplyAction="http://tempuri.org/IUserCRUD/unreportUserResponse")]
        int unreportUser(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/unreportUser", ReplyAction="http://tempuri.org/IUserCRUD/unreportUserResponse")]
        System.Threading.Tasks.Task<int> unreportUserAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/getReportedUsersManagement", ReplyAction="http://tempuri.org/IUserCRUD/getReportedUsersManagementResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[][] getReportedUsersManagement();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/getReportedUsersManagement", ReplyAction="http://tempuri.org/IUserCRUD/getReportedUsersManagementResponse")]
        System.Threading.Tasks.Task<object[][]> getReportedUsersManagementAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/getUsername", ReplyAction="http://tempuri.org/IUserCRUD/getUsernameResponse")]
        string getUsername(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/getUsername", ReplyAction="http://tempuri.org/IUserCRUD/getUsernameResponse")]
        System.Threading.Tasks.Task<string> getUsernameAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/isUserPrem", ReplyAction="http://tempuri.org/IUserCRUD/isUserPremResponse")]
        string isUserPrem(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/isUserPrem", ReplyAction="http://tempuri.org/IUserCRUD/isUserPremResponse")]
        System.Threading.Tasks.Task<string> isUserPremAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/getUserDetailsManagement", ReplyAction="http://tempuri.org/IUserCRUD/getUserDetailsManagementResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] getUserDetailsManagement(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/getUserDetailsManagement", ReplyAction="http://tempuri.org/IUserCRUD/getUserDetailsManagementResponse")]
        System.Threading.Tasks.Task<object[]> getUserDetailsManagementAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/updateUserDetailsManagement", ReplyAction="http://tempuri.org/IUserCRUD/updateUserDetailsManagementResponse")]
        int updateUserDetailsManagement(int userID, string username, string firstName, string surname, string Email, string cellNumber, System.DateTime DoB, System.DateTime regDate, int modAccess, int adminAccess, int premAccess, int flagged, int reportCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/updateUserDetailsManagement", ReplyAction="http://tempuri.org/IUserCRUD/updateUserDetailsManagementResponse")]
        System.Threading.Tasks.Task<int> updateUserDetailsManagementAsync(int userID, string username, string firstName, string surname, string Email, string cellNumber, System.DateTime DoB, System.DateTime regDate, int modAccess, int adminAccess, int premAccess, int flagged, int reportCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/numNewUsersYearManagement", ReplyAction="http://tempuri.org/IUserCRUD/numNewUsersYearManagementResponse")]
        int numNewUsersYearManagement(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/numNewUsersYearManagement", ReplyAction="http://tempuri.org/IUserCRUD/numNewUsersYearManagementResponse")]
        System.Threading.Tasks.Task<int> numNewUsersYearManagementAsync(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/numNewUsersMonthManagement", ReplyAction="http://tempuri.org/IUserCRUD/numNewUsersMonthManagementResponse")]
        int numNewUsersMonthManagement(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/numNewUsersMonthManagement", ReplyAction="http://tempuri.org/IUserCRUD/numNewUsersMonthManagementResponse")]
        System.Threading.Tasks.Task<int> numNewUsersMonthManagementAsync(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/numNewUsersWeekManagement", ReplyAction="http://tempuri.org/IUserCRUD/numNewUsersWeekManagementResponse")]
        int numNewUsersWeekManagement(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/numNewUsersWeekManagement", ReplyAction="http://tempuri.org/IUserCRUD/numNewUsersWeekManagementResponse")]
        System.Threading.Tasks.Task<int> numNewUsersWeekManagementAsync(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/numNewUsersDayManagement", ReplyAction="http://tempuri.org/IUserCRUD/numNewUsersDayManagementResponse")]
        int numNewUsersDayManagement(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/numNewUsersDayManagement", ReplyAction="http://tempuri.org/IUserCRUD/numNewUsersDayManagementResponse")]
        System.Threading.Tasks.Task<int> numNewUsersDayManagementAsync(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/numReportedUsersManagement", ReplyAction="http://tempuri.org/IUserCRUD/numReportedUsersManagementResponse")]
        int numReportedUsersManagement();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/numReportedUsersManagement", ReplyAction="http://tempuri.org/IUserCRUD/numReportedUsersManagementResponse")]
        System.Threading.Tasks.Task<int> numReportedUsersManagementAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/numFlaggedUsersManagement", ReplyAction="http://tempuri.org/IUserCRUD/numFlaggedUsersManagementResponse")]
        int numFlaggedUsersManagement();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/numFlaggedUsersManagement", ReplyAction="http://tempuri.org/IUserCRUD/numFlaggedUsersManagementResponse")]
        System.Threading.Tasks.Task<int> numFlaggedUsersManagementAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/numPremUsersManagement", ReplyAction="http://tempuri.org/IUserCRUD/numPremUsersManagementResponse")]
        int numPremUsersManagement();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserCRUD/numPremUsersManagement", ReplyAction="http://tempuri.org/IUserCRUD/numPremUsersManagementResponse")]
        System.Threading.Tasks.Task<int> numPremUsersManagementAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserCRUDChannel : IFMTYP_team02.UserService.IUserCRUD, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserCRUDClient : System.ServiceModel.ClientBase<IFMTYP_team02.UserService.IUserCRUD>, IFMTYP_team02.UserService.IUserCRUD {
        
        public UserCRUDClient() {
        }
        
        public UserCRUDClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserCRUDClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserCRUDClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserCRUDClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int insertUser(string Username, string Password, string firstName, string surname, string Email, string cellNumber, System.DateTime DoB, System.DateTime RegDate, int modAccess, int adminAccess, int premAccess) {
            return base.Channel.insertUser(Username, Password, firstName, surname, Email, cellNumber, DoB, RegDate, modAccess, adminAccess, premAccess);
        }
        
        public System.Threading.Tasks.Task<int> insertUserAsync(string Username, string Password, string firstName, string surname, string Email, string cellNumber, System.DateTime DoB, System.DateTime RegDate, int modAccess, int adminAccess, int premAccess) {
            return base.Channel.insertUserAsync(Username, Password, firstName, surname, Email, cellNumber, DoB, RegDate, modAccess, adminAccess, premAccess);
        }
        
        public int deleteUser(string ID) {
            return base.Channel.deleteUser(ID);
        }
        
        public System.Threading.Tasks.Task<int> deleteUserAsync(string ID) {
            return base.Channel.deleteUserAsync(ID);
        }
        
        public int updateUserInfo(int ID, string firstName, string surname, string cellNumber, System.DateTime DoB) {
            return base.Channel.updateUserInfo(ID, firstName, surname, cellNumber, DoB);
        }
        
        public System.Threading.Tasks.Task<int> updateUserInfoAsync(int ID, string firstName, string surname, string cellNumber, System.DateTime DoB) {
            return base.Channel.updateUserInfoAsync(ID, firstName, surname, cellNumber, DoB);
        }
        
        public object[] Authenticate(string UserEmailOrUsername, string Password) {
            return base.Channel.Authenticate(UserEmailOrUsername, Password);
        }
        
        public System.Threading.Tasks.Task<object[]> AuthenticateAsync(string UserEmailOrUsername, string Password) {
            return base.Channel.AuthenticateAsync(UserEmailOrUsername, Password);
        }
        
        public int updateUserPassword(int ID, string emailAddress, string oldPass, string newPass) {
            return base.Channel.updateUserPassword(ID, emailAddress, oldPass, newPass);
        }
        
        public System.Threading.Tasks.Task<int> updateUserPasswordAsync(int ID, string emailAddress, string oldPass, string newPass) {
            return base.Channel.updateUserPasswordAsync(ID, emailAddress, oldPass, newPass);
        }
        
        public string getUserEmail(int ID) {
            return base.Channel.getUserEmail(ID);
        }
        
        public System.Threading.Tasks.Task<string> getUserEmailAsync(int ID) {
            return base.Channel.getUserEmailAsync(ID);
        }
        
        public int updateUserEmail(int ID, string userPass, string oldEmail, string newEmail) {
            return base.Channel.updateUserEmail(ID, userPass, oldEmail, newEmail);
        }
        
        public System.Threading.Tasks.Task<int> updateUserEmailAsync(int ID, string userPass, string oldEmail, string newEmail) {
            return base.Channel.updateUserEmailAsync(ID, userPass, oldEmail, newEmail);
        }
        
        public int updateUserPremAccess(int ID, string userPass, string userEmail, string cellNumber, System.DateTime DoB, int premAccess) {
            return base.Channel.updateUserPremAccess(ID, userPass, userEmail, cellNumber, DoB, premAccess);
        }
        
        public System.Threading.Tasks.Task<int> updateUserPremAccessAsync(int ID, string userPass, string userEmail, string cellNumber, System.DateTime DoB, int premAccess) {
            return base.Channel.updateUserPremAccessAsync(ID, userPass, userEmail, cellNumber, DoB, premAccess);
        }
        
        public object[][] getFlaggedUsersManagement() {
            return base.Channel.getFlaggedUsersManagement();
        }
        
        public System.Threading.Tasks.Task<object[][]> getFlaggedUsersManagementAsync() {
            return base.Channel.getFlaggedUsersManagementAsync();
        }
        
        public object[][] getAllUsersManagement() {
            return base.Channel.getAllUsersManagement();
        }
        
        public System.Threading.Tasks.Task<object[][]> getAllUsersManagementAsync() {
            return base.Channel.getAllUsersManagementAsync();
        }
        
        public int unflagUser(int userID) {
            return base.Channel.unflagUser(userID);
        }
        
        public System.Threading.Tasks.Task<int> unflagUserAsync(int userID) {
            return base.Channel.unflagUserAsync(userID);
        }
        
        public int flagUser(int userID) {
            return base.Channel.flagUser(userID);
        }
        
        public System.Threading.Tasks.Task<int> flagUserAsync(int userID) {
            return base.Channel.flagUserAsync(userID);
        }
        
        public int reportUser(int userID) {
            return base.Channel.reportUser(userID);
        }
        
        public System.Threading.Tasks.Task<int> reportUserAsync(int userID) {
            return base.Channel.reportUserAsync(userID);
        }
        
        public int unreportUser(int userID) {
            return base.Channel.unreportUser(userID);
        }
        
        public System.Threading.Tasks.Task<int> unreportUserAsync(int userID) {
            return base.Channel.unreportUserAsync(userID);
        }
        
        public object[][] getReportedUsersManagement() {
            return base.Channel.getReportedUsersManagement();
        }
        
        public System.Threading.Tasks.Task<object[][]> getReportedUsersManagementAsync() {
            return base.Channel.getReportedUsersManagementAsync();
        }
        
        public string getUsername(int userID) {
            return base.Channel.getUsername(userID);
        }
        
        public System.Threading.Tasks.Task<string> getUsernameAsync(int userID) {
            return base.Channel.getUsernameAsync(userID);
        }
        
        public string isUserPrem(int userID) {
            return base.Channel.isUserPrem(userID);
        }
        
        public System.Threading.Tasks.Task<string> isUserPremAsync(int userID) {
            return base.Channel.isUserPremAsync(userID);
        }
        
        public object[] getUserDetailsManagement(int userID) {
            return base.Channel.getUserDetailsManagement(userID);
        }
        
        public System.Threading.Tasks.Task<object[]> getUserDetailsManagementAsync(int userID) {
            return base.Channel.getUserDetailsManagementAsync(userID);
        }
        
        public int updateUserDetailsManagement(int userID, string username, string firstName, string surname, string Email, string cellNumber, System.DateTime DoB, System.DateTime regDate, int modAccess, int adminAccess, int premAccess, int flagged, int reportCount) {
            return base.Channel.updateUserDetailsManagement(userID, username, firstName, surname, Email, cellNumber, DoB, regDate, modAccess, adminAccess, premAccess, flagged, reportCount);
        }
        
        public System.Threading.Tasks.Task<int> updateUserDetailsManagementAsync(int userID, string username, string firstName, string surname, string Email, string cellNumber, System.DateTime DoB, System.DateTime regDate, int modAccess, int adminAccess, int premAccess, int flagged, int reportCount) {
            return base.Channel.updateUserDetailsManagementAsync(userID, username, firstName, surname, Email, cellNumber, DoB, regDate, modAccess, adminAccess, premAccess, flagged, reportCount);
        }
        
        public int numNewUsersYearManagement(System.DateTime date) {
            return base.Channel.numNewUsersYearManagement(date);
        }
        
        public System.Threading.Tasks.Task<int> numNewUsersYearManagementAsync(System.DateTime date) {
            return base.Channel.numNewUsersYearManagementAsync(date);
        }
        
        public int numNewUsersMonthManagement(System.DateTime date) {
            return base.Channel.numNewUsersMonthManagement(date);
        }
        
        public System.Threading.Tasks.Task<int> numNewUsersMonthManagementAsync(System.DateTime date) {
            return base.Channel.numNewUsersMonthManagementAsync(date);
        }
        
        public int numNewUsersWeekManagement(System.DateTime date) {
            return base.Channel.numNewUsersWeekManagement(date);
        }
        
        public System.Threading.Tasks.Task<int> numNewUsersWeekManagementAsync(System.DateTime date) {
            return base.Channel.numNewUsersWeekManagementAsync(date);
        }
        
        public int numNewUsersDayManagement(System.DateTime date) {
            return base.Channel.numNewUsersDayManagement(date);
        }
        
        public System.Threading.Tasks.Task<int> numNewUsersDayManagementAsync(System.DateTime date) {
            return base.Channel.numNewUsersDayManagementAsync(date);
        }
        
        public int numReportedUsersManagement() {
            return base.Channel.numReportedUsersManagement();
        }
        
        public System.Threading.Tasks.Task<int> numReportedUsersManagementAsync() {
            return base.Channel.numReportedUsersManagementAsync();
        }
        
        public int numFlaggedUsersManagement() {
            return base.Channel.numFlaggedUsersManagement();
        }
        
        public System.Threading.Tasks.Task<int> numFlaggedUsersManagementAsync() {
            return base.Channel.numFlaggedUsersManagementAsync();
        }
        
        public int numPremUsersManagement() {
            return base.Channel.numPremUsersManagement();
        }
        
        public System.Threading.Tasks.Task<int> numPremUsersManagementAsync() {
            return base.Channel.numPremUsersManagementAsync();
        }
    }
}
